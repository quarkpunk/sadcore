import{a0 as d,Q as a,N as o,p as f,q as h,a1 as l}from"./main-FXtvOfZS.js";const u=d("dating",{state:()=>({data:[],loading:!1,filter:{gender:0,distance:5,age:{min:18,max:30},body_type:{min:1,max:5},body_height:{min:160,max:190},exclude:[]}}),actions:{async fetch(){this.loading=!0;const e=await a.post("/api/dating",this.filter);return!e||!e.data?!1:(this.data=e.data,this.loading=!1,console.log("loaded: dating"),this.data.length>0&&l(this.data),this.deleteDuplicated(),!0)},async fetchMore(){this.loading=!0,console.log("loading: dating fetch more...");const e=await a.post("/api/dating",this.filter);return!e||!e.data?!1:(e.data.length>0&&l(e.data),this.data.unshift(...e.data),this.loading=!1,console.log("loaded: dating fetch more"),this.deleteDuplicated(),!0)},async fetchMoreAuto(){this.checkFetchMore&&await this.fetchMore()},find(e){return this.data.length==0?null:this.data.find(t=>t._id===e)},filterCreateUser(){const e=f();if(!h().authenticated){this.filterCreateDefault();return}if(e.data){const r=e.data.info.gender,i=r==2?1:2;this.filterCreateDefault(r!=0?i:0)}else this.filterCreateDefault()},filterCreateDefault(e=0,t=18,r=30){const i={gender:e,distance:5,age:{min:t,max:r},body_type:{min:1,max:5},body_height:{min:160,max:190}};return this.filter.gender=i.gender,this.filter.distance=i.distance,this.filter.age=i.age,this.filter.body_type=i.body_type,this.filter.body_height=i.body_height,localStorage.setItem("_filter",JSON.stringify(i)),i},filterExist(){const e=localStorage.getItem("_filter");return e!=null&&e!=null},filterGet(){const e=localStorage.getItem("_filter");return e?JSON.parse(e):(this.filterCreateUser(),JSON.parse(localStorage.getItem("_filter")))},filterLoad(){const e=localStorage.getItem("_filter");if(!e){this.filterCreateUser();return}const t=JSON.parse(e);this.filter.gender=t.gender,this.filter.distance=parseInt(t.distance),this.filter.age=t.age,this.filter.body_type=t.body_type,this.filter.body_height=t.body_height},filterSave(e,t,r,i,s){const n={gender:e,distance:parseInt(t),age:r,body_type:i,body_height:s};this.filter.gender=e,this.filter.distance=parseInt(t),this.filter.age=r,this.filter.body_type=i,this.filter.body_height=s,localStorage.setItem("_filter",JSON.stringify(n))},filterClearExclude(){this.filter.exclude=[]},filterPushExclude(e){this.filter.exclude.push(e),this.filter.exclude.length>5&&this.filter.exclude.shift()},async likeCurrent(){const e=this.data.pop();if(e)try{await a.post(`/api/dating/like?to=${e._id}`),this.filterPushExclude(e._id),this.fetchMoreAuto(),console.log("dating: liked ",e._id)}catch{console.error("dating: failed send like")}},async dislikeCurrent(){const e=this.data.pop();if(e)try{await a.post(`/api/dating/dislike?to=${e._id}`),this.filterPushExclude(e._id),this.fetchMoreAuto(),console.log("dating: disliked ",e._id)}catch{console.error("dating: failed send dislike")}},async like(e){try{if(!e)return!1;const t=await a.post(`/api/dating/like?to=${e}`);return t.status==200||t==202}catch{return console.error("dating: failed send like"),!1}},async dislike(e){try{if(!e)return!1;const t=await a.post(`/api/dating/dislike?to=${e}`);return t.status==200||t==202}catch{return console.error("dating: failed send dislike"),!1}},async delete(e){if(!e)return!1;try{return await a.post(`/api/dating/hide?to=${e}`)?(o().deleteLocal(e),!0):!1}catch{return console.error("dating: failed delete like"),!1}},deleteDuplicated(){const e=new Set;this.data=this.data.filter(t=>e.has(t._id)?(console.warn("dating: delete duplicate -> ",t._id),!1):(e.add(t._id),!0))}},getters:{checkFetchMore:e=>e.data&&e.data.length>=1&&e.data.length<=2}});export{u};
