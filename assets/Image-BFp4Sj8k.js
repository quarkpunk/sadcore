import{U as S,r,D as B,P,c as i,d as m,f as C,g as p,n as y,C as b,t as x,_ as N}from"./main-twFbSp79.js";const O={key:0,class:"image"},w=["alt","src"],z=["data-src","alt"],D={key:1,class:"image error"},M={class:"gray",style:{margin:"auto"}},T=S({__name:"Image",props:{src:{type:String,required:!0},threshold:{type:Number,default:.05},placeholder:String,blur:Boolean,alt:String,cover:Boolean,styleImage:Object,classImage:String},emits:["load","error","placeholder-load","placeholder-error"],setup(e,{emit:I}){const l=I,o=e,c=r(null),t=r(!1),v=r(!1),h=r(!1),g=r(!0),f=r(!1),a=r(null),_=()=>{t.value=!0,l("placeholder-load"),n()},k=()=>{t.value=!0,l("placeholder-error"),n()},E=()=>{v.value=!0,l("error")},L=()=>{l("load"),h.value=!0,setTimeout(()=>{g.value=!1,setTimeout(()=>f.value=!0,2e3)},100)},n=()=>{!c.value||!t.value||(a.value&&a.value.disconnect(),a.value=new IntersectionObserver(d=>{d.forEach(u=>{if(u.isIntersecting){const s=u.target;s.dataset.src&&(s.src=s.dataset.src),a.value?.unobserve(s)}})},{rootMargin:"0px",threshold:o.threshold}),a.value.observe(c.value))};return B(()=>{o.placeholder||(t.value=!0,n())}),P(()=>{a.value&&a.value.disconnect()}),(d,u)=>v.value?(m(),i("div",D,[p("p",M,x(d.$t("status.error")),1)])):(m(),i("div",O,[e.placeholder&&!f.value?(m(),i("img",{key:0,style:b(e.styleImage),alt:e.alt,src:e.placeholder,class:y(["placeholder",{"placeholder-hidden":!g.value,"placeholder-blur":o.blur,cover:o.cover}]),onLoad:_,onError:k},null,46,w)):C("",!0),p("img",{ref_key:"image",ref:c,"data-src":e.src,style:b(e.styleImage),alt:e.alt,class:y(["main-image",{loaded:h.value,cover:o.cover}]),onLoad:L,onError:E},null,46,z)]))}}),V=N(T,[["__scopeId","data-v-4b23fa6c"]]);export{V as I};
